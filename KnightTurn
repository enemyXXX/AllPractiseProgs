<!DOCTYPE html> 
<html> 
<head> 
	<script> 

function knightsTour(x0, y0, size) { // Функция с 3 параметрами: x0 - начальная точка по X, y0 - по Y, size - размер доски 
	var done = false; /*Булевая переменная для проверки размещения*/
var h = []; // Двумерный массив, для визуализации шахматной доски 

for (var i = 0; i < size; i++) { /*Массив, в котором создаём пустой двумерный массив с размером size * size */ 
	h[i] = [];
} 
var nsqr = size * size; /*Максимальное количество ходов*/ 

/*Заполняем двумерный массив пустыми значениями*/ 
for (var i = 0; i < size; i++) { 
	for (var j = 0; j < size; j++) { 
		h[i][j] = 0;
	} 
} 

/*Все возможные вариации хода по оси X и Y*/ 
var dx = [2, 1, -1, -2, -2, -1, 1, 2]; 
var dy = [1, 2, 2, 1, -1, -2, -2, -1]; 

h[x0][y0] = 1; /*Инициализируем первый ход из координат, которые были введены в качестве параметром функции*/ 

/*Функция для проверки хода*/ 
function canBeDone(u, v, i) { 
	h[u][v] = i; 
	done = tryNextMove(u, v, i); 
	if (!done) { 
		h[u][v] = 0; /*Если нельзя сделать ход - обнуляем клетку*/ 
	} 
	return done; 
} 

/*Функция проверки следующего хода */ 
function tryNextMove(x, y, i) { 
	var done; /*Булевая переменная для проверки хода*/ 
// u, v - координаты нового хода; k - индекс нового хода; eos - окончание ходов 
var env = {"done": false, "eos": false, "u": x, "v": y, "k": -1}; 

function next() { /*Подфункция, для определения координат следующего хода*/ 
	x = env.u; 
	y = env.v; 
	while (env.k < 8) { 
		env.k += 1; 
		if (env.k < 8) { 
			env.u = x + dx[env.k]; /*Меняем значение свойств объекта env*/ 
			env.v = y + dy[env.k]; 
		} 
		if ((env.u >= 0 && env.u < size) && (env.v >= 0 && env.v < size) && h[env.u][env.v] == 0) { 
			break; /*Выходим из цикла, если условие выполено*/ 
		} 
	} 
	env.eos = (env.k == 8); /*Если k = 8, все возможные ходы были попробованы, следовательно eos = true*/ 
} 

if (i < nsqr) { /*Если i меньше возможного количества шагов - делаем следующий шаг и булевая переменная проверки хода становится false*/ 
	next(); 
	while (!env.eos && !canBeDone(env.u, env.v, i+1)) { /*Пока есть возможности сделать ход и ход не может быть выполнен - вызываем функция определения координат следующего хода*/ 
		next(); 
	} 
	done = !env.eos; 
} else { /*Иначе становится true*/ 
	done = true; 
} 
return done; /*Возвращаем переменную проверки удачного хода*/ 
} 

tryNextMove(x0, y0, 1); /*Вызываем выполнение первого хода*/ 
return h; /*Возвращаем полученный массив*/
}



console.log((knightsTour(0,0,8)));

</script> 
</head> 
<body> 

	<p id="Output"></p>
</body> 
</html>
